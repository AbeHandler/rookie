// Generated by CoffeeScript 1.10.0
var React, ReactDOM, d3;

React = require('react');

ReactDOM = require('react-dom');

d3 = require('d3');

module.exports = React.createClass({displayName: "exports",
  getDefaultProps: function() {
    return {
      width: 100,
      height: 16,
      strokeColor: 'black',
      strokeWidth: '0.5px',
      interpolate: 'basis',
      circleDiameter: 1.5,
      data: [1, 23, 5, 5, 23, 0, 0, 0, 4, 32, 3, 12, 3, 1, 24, 1, 5, 5, 24, 23]
    };
  },
  componentDidMount: function() {
    return this.renderSparkline();
  },
  componentDidUpdate: function() {
    return this.renderSparkline();
  },
  render: function() {
    return React.createElement("div", null);
  },
  renderSparkline: function() {
    var data, el, lastX, lastY, line, ref, svg, x, y;
    el = ReactDOM.findDOMNode(this);
    while (el.firstChild) {
      el.removeChild(el.firstChild);
    }
    data = this.props.data.slice();
    if (data.length === 0) {
      return;
    }
    x = d3.scale.linear().range([2, this.props.width - 2]);
    y = d3.scale.linear().range([this.props.height - 2, 2]);
    if (((ref = data[0]) != null ? ref.date : void 0) != null) {
      data.forEach(function(d) {
        return d.date = d3.time.format.iso.parse(d.date);
      });
      line = d3.svg.line().interpolate(this.props.interpolate).x(function(d, i) {
        return x(d.date);
      }).y(function(d) {
        return y(d.value);
      });
      x.domain(d3.extent(data, function(d) {
        return d.date;
      }));
      y.domain(d3.extent(data, function(d) {
        return d.value;
      }));
      lastX = x(data[data.length - 1].date);
      lastY = y(data[data.length - 1].value);
    } else {
      line = d3.svg.line().interpolate(this.props.interpolate).x(function(d, i) {
        return x(i);
      }).y(function(d) {
        return y(d);
      });
      x.domain([0, data.length]);
      y.domain(d3.extent(data));
      lastX = x(data.length - 1);
      lastY = y(data[data.length - 1]);
    }
    svg = d3.select(ReactDOM.findDOMNode(this)).append('svg').attr('width', this.props.width).attr('height', this.props.height).append('g');
    svg.append('path').datum(data).attr('class', 'sparkline').style('fill', 'none').style('stroke', this.props.strokeColor).style('stroke-width', this.props.strokeWidth).attr('d', line);
    return svg.append('circle').attr('class', 'sparkcircle').attr('cx', lastX).attr('cy', lastY).attr('fill', 'red').attr('stroke', 'none').attr('r', this.props.circleDiameter);
  }
});
